/*This is to set up and allow all browsers to start looking the same
Also: box-sizing makes sure that the border and padding are not added to total width and height of an element
Changed box-sizing to inherit for better practise and put it on body instead
*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

/*Putting root font-size to 10px makes it easier to convert other font-sizes to rem*/
/*We changed from px to percentage because it will help accessibility (you will allow them change to the size to 10px if you don't allow it)
we take 100% = 16px and made it 62.5% = 10px*/
html {
  font-size: 62.5%; }

/*The reason for adding font here is to make use of inheritance for font styling*/
body {
  box-sizing: border-box; }

/*For best browser performance, using only opacity and transform are desirable*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/*The reason for adding font here is to make use of inheritance for font styling*/
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

/*When there are elements within that are translating, there is a small shake from the parent,
  so backface-visibility is hidden*/
.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem;
  /* When you want to set a span to be underneath each other, make them block instead of inline elements*/ }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 2.17rem;
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.u-center-text {
  text-align: center; }

.u-margin-bottom-8 {
  margin-bottom: 8rem; }

.btn {
  /*Link is pseudo class for the anchor element and visited is when that element has been pressed before
    Also: links are inline elements which means any extra styling will overflow, inline-block keeps width but extra styling
    will not overflow
    Transition needs to be on the initial state, just facts*/
  /*For after you need to have a content, even if it empty, or it will not work
  Treated like a child of the element*/
  /*The animation fill mode is used to set the state of the animation to 0% until the animation begins*/ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards; }

/*If you want something on top of your background image, or below, you put it before/after in the same background-image tag
Also: to get clip path pre-made shapes: https://bennettfeely.com/clippy/
*/
.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /*The position of top/left are determined from parent who's position is set to relative */
  /*The transform element relates to the div itself where as the other position elements (top/left)
    are in relation to the parent*/ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left;
    background: lightblue; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2* 6rem) / 3); }
  .row .col-1-of-4 {
    width: calc((100% - 3* 6rem) / 4); }
  .row .col-2-of-3 {
    width: calc(2* ((100% - 2* 6rem) / 3) + 6rem); }
  .row .col-2-of-4 {
    width: calc(2* ((100% - 3* 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3* ((100% - 3* 6rem) / 4) + 2* 6rem); }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
